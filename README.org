* Dotfile
This is my awsome config file

* TMUX
- prefix: C-SPC 

* Emacs
- mark: C-c C-SPC

* VIM
** Shortcut
- =C-E=
** Plugin
*** Install Vim-plug 

#+begin_example
curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
#+end_example
*** Edit =.vimrc=
#+begin_example
call plug#begin('~/.vim/plugged')
Plug 'itchyny/lightline.vim'
call plug#end()
#+end_example

*** reload
#+begin_example
:source ~/.vimrc
#+end_example
*** Plug Management
#+begin_example
:PlugStatus
:PlugInstall
:PlugUpdate
:PlugDiff
:PlugClean
:PlugUpgrade
#+end_example

** Vim tutorial Sumarry

#+begin_example
        Lesson 1 SUMMARY


  1. The cursor is moved using either the arrow keys or the hjkl keys.
         h (left)       j (down)       k (up)       l (right)

  2. To start Vim from the shell prompt type:  vim FILENAME <ENTER>

  3. To exit Vim type:     <ESC>   :q!   <ENTER>  to trash all changes.
             OR type:      <ESC>   :wq   <ENTER>  to save the changes.

  4. To delete the character at the cursor type:  x

  5. To insert or append text type:
         i   type inserted text   <ESC>         insert before the cursor
         A   type appended text   <ESC>         append after the line

NOTE: Pressing <ESC> will place you in Normal mode or will cancel
      an unwanted and partially completed command.
#+end_example


#+begin_example
        Lesson 1 SUMMARY


  1. The cursor is moved using either the arrow keys or the hjkl keys.
         h (left)       j (down)       k (up)       l (right)

  2. To start Vim from the shell prompt type:  vim FILENAME <ENTER>

  3. To exit Vim type:     <ESC>   :q!   <ENTER>  to trash all changes.
             OR type:      <ESC>   :wq   <ENTER>  to save the changes.

  4. To delete the character at the cursor type:  x

  5. To insert or append text type:
         i   type inserted text   <ESC>         insert before the cursor
         A   type appended text   <ESC>         append after the line

NOTE: Pressing <ESC> will place you in Normal mode or will cancel
      an unwanted and partially completed command.

#+end_example

#+begin_example
                        Lesson 3 SUMMARY


  1. To put back text that has just been deleted, type   p .  This puts the
     deleted text AFTER the cursor (if a line was deleted it will go on the
     line below the cursor).

  2. To replace the character under the cursor, type   r   and then the
     character you want to have there.

  3. The change operator allows you to change from the cursor to where the
     motion takes you.  eg. Type  ce  to change from the cursor to the end of
     the word,  c$  to change to the end of a line.

  4. The format for change is:

         c   [number]   motion

Now go on to the next lesson.


#+end_example


#+begin_example
                             Lesson 4 SUMMARY


  1. CTRL-G  displays your location in the file and the file status.
             G  moves to the end of the file.
     number  G  moves to that line number.
            gg  moves to the first line.

  2. Typing  /  followed by a phrase searches FORWARD for the phrase.
     Typing  ?  followed by a phrase searches BACKWARD for the phrase.
     After a search type  n  to find the next occurrence in the same direction
     or  N  to search in the opposite direction.
     CTRL-O takes you back to older positions, CTRL-I to newer positions.

  3. Typing  %  while the cursor is on a (,),[,],{, or } goes to its match.

  4. To substitute new for the first old in a line type    :s/old/new
     To substitute new for all 'old's on a line type       :s/old/new/g
     To substitute phrases between two line #'s type       :#,#s/old/new/g
     To substitute all occurrences in the file type        :%s/old/new/g
     To ask for confirmation each time add 'c'             :%s/old/new/gc
#+end_example

#+begin_example
                               Lesson 5 SUMMARY


  1.  :!command  executes an external command.

      Some useful examples are:
         (Windows)        (Unix)
          :!dir            :!ls            -  shows a directory listing.
          :!del FILENAME   :!rm FILENAME   -  removes file FILENAME.

  2.  :w FILENAME  writes the current Vim file to disk with name FILENAME.

  3.  v  motion  :w FILENAME  saves the Visually selected lines in file
      FILENAME.

  4.  :r FILENAME  retrieves disk file FILENAME and puts it below the
      cursor position.

  5.  :r !dir  reads the output of the dir command and puts it below the
      cursor position.
#+end_example

#+begin_example
 Lesson 6 SUMMARY

  1. Type  o  to open a line BELOW the cursor and start Insert mode.
     Type  O  to open a line ABOVE the cursor.

  2. Type  a  to insert text AFTER the cursor.
     Type  A  to insert text after the end of the line.

  3. The  e  command moves to the end of a word.

  4. The  y  operator yanks (copies) text,  p  puts (pastes) it.

  5. Typing a capital  R  enters Replace mode until  <ESC>  is pressed.

  6. Typing ":set xxx" sets the option "xxx".  Some options are:
        'ic' 'ignorecase'       ignore upper/lower case when searching
        'is' 'incsearch'        show partial matches for a search phrase
        'hls' 'hlsearch'        highlight all matching phrases
     You can either use the long or the short option name.

  7. Prepend "no" to switch an option off:   :set noic
#+end_example

#+begin_example
                               Lesson 7 SUMMARY


  1. Type  :help  or press <F1> or <HELP>  to open a help window.

  2. Type  :help cmd  to find help on  cmd .

  3. Type  CTRL-W CTRL-W  to jump to another window.

  4. Type  :q  to close the help window.

  5. Create a vimrc startup script to keep your preferred settings.

  6. When typing a  :  command, press CTRL-D to see possible completions.
     Press <TAB> to use one completion.
#+end_example

** command
- set paste
- =:qa!=
- =:wq=
- =:x=
- =!:command=
  - =!date=
  - =:r !command=
    =r !date=

** Edit
- I 是在光标所在行的行首插入需要录入的文本
- A 是在光标所在行的行尾插入需要录入的文本
- o 是光标所在行的下一行行首插入需要录入的文本。
- O 是光标所在行的上一行行首插入需要录入的文本。
- s 删除光标所在处的字符然后插入需要录入的文本。
- S 删除光标所在行，在当前行的行首开始插入需要录入的文本。
- cw ，删除从光标处开始到该单词结束的所有字符，然后插入需要录入的文本
- =:n1,n2d=
n1 和 n2 指的是起始行号和结束行号，d 是删除关键字
** Search and Replace
- =:set ic= :ignore case
- =:set noic=
- =:{作用范围}s/{目标}/{替换}/{替换的标志}=
  作用范围分为当前行、全文、选区等等
  #+begin_example
  :s/zempty/handsome/g
  #+end_example
将会把当前光标所在行的 zempty 替换成 handsome

#+begin_example
:%s/zempty/handsome/g
#+end_example
将会把全文中的 zempty 替换成 handsome

#+begin_example
:n1,n2s/zempty/handsome/g
#+end_example
- =:'<,'>s/zempty/handsome/g=: Visual mode
- =:%s/zempty/handsome/i=
i 表示大小写不敏感查找，I 表示大小写敏感：
- c 表示需要确认
#+begin_example
:%s/zempty/handsome/gc
#+end_example

** split
- =vim -On file1 file2 ...=: horizental
- =vim -on file1 file2 ...=: vertical
- C+W s: vertical
- C+W v: horizontal
- =:sp file=: vertical split files
- =:vsp file=: horizental split files
** Switch Window  
- C+W c/q: close current window
作用范围分为当前行、全文、选区等等- C+w h
- C+w l
** file
- =:w file=
- =:ls=: list file
- =:bn=: switch file
- =:e file=: open another file
- =:e!=  :放弃对文件的所有修改，恢复文件到上次保存的位置。
- =:saveas file=: save to another file
- =bn/bp=: switch file

** netrw - the unloved directory browser
- =:Explore= : opens netrw in the current window
- =:Sexplore=: opens netrw in a horizontal split
- =:Vexplore=: opens netrw in a vertical split

* Reference
- spacemacs
- https://github.com/yasunori1211/dotfiles.git
- [[ontacts.google.com/contact/3a07d5b20df1b500?hl=zh_CN&edit=true][精通 VIM ，此文就够了]]
